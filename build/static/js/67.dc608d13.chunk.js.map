{"version":3,"file":"static/js/67.dc608d13.chunk.js","mappings":"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","sources":["components/errorMassage/ErrorMassage.js","components/comicsList/ComicsList.js","components/appBunner/AppBunner.js","components/pages/ComicsPage.js","services/MarvelSevice.js","hooks/http.hook.js"],"sourcesContent":["import img from './error.gif';\r\n\r\nconst ErrorMassage = () => {\r\n   return (\r\n      <img src={img} alt=\"error\" style={{\r\n         margin: '0 auto', background: 'none', display: 'block',\r\n         width: '250px', height: '250px', objectFit: 'contain'\r\n      }} />\r\n   )\r\n}\r\n\r\nexport default ErrorMassage;","import useMarvelService from '../../services/MarvelSevice';\r\nimport ErrorMassage from '../errorMassage/ErrorMassage';\r\nimport Spinner from '../spinner/Spinner';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './comicsList.scss';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst ComicsList = () => {\r\n   const [comicsList, setComicsList] = useState([]);\r\n   const [offset, setOffset] = useState(58450);\r\n   const [moreComicsLoading, setMoreComicsLoading] = useState(false);\r\n   const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n   const { loading, error, getAllComics } = useMarvelService();\r\n\r\n   useEffect(() => {\r\n      onRequest(offset, true);\r\n      // eslint-disable-next-line\r\n   }, [])\r\n\r\n   const onRequest = (offset, initial) => {\r\n      initial ? setMoreComicsLoading(false) : setMoreComicsLoading(true);\r\n\r\n      getAllComics(offset)\r\n         .then(onComicsListLoaded)\r\n   }\r\n\r\n   const onComicsListLoaded = (newComicsList) => {\r\n\r\n      const ended = newComicsList.length < 8 ? true : false;\r\n\r\n      const addComic = (index) => {\r\n         if (index < newComicsList.length) {\r\n            setComicsList(comicsList => [...comicsList, newComicsList[index]]);\r\n            setTimeout(() => addComic(index + 1), 300)\r\n         } else {\r\n            setOffset(offset => offset + 8);\r\n            setMoreComicsLoading(false);\r\n            setComicsEnded(comicsEnded => ended);\r\n         }\r\n      }\r\n\r\n      addComic(0);\r\n\r\n\r\n   }\r\n\r\n   const renderItems = (arr) => {\r\n      const items = arr.map((item, i) => {\r\n         const { thumbnail, title, price, id } = item;\r\n\r\n         let imgStyle = { \"objectFit\": \"cover\" };\r\n\r\n         if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n            imgStyle = { \"objectFit\": \"unset\" };\r\n         }\r\n\r\n         return (\r\n            <CSSTransition key={i} timeout={300} classNames=\"comics__item\">\r\n               <li className=\"comics__item\">\r\n                  <Link to={`/comics/${id}`}>\r\n                     <img\r\n                        src={thumbnail}\r\n                        alt={title}\r\n                        style={imgStyle}\r\n                        className=\"comics__item-img\"\r\n                     />\r\n                     <div className=\"comics__item-name\">{title}</div>\r\n                     <div className=\"comics__item-price\">{price}</div>\r\n                  </Link>\r\n               </li>\r\n            </CSSTransition>\r\n\r\n         )\r\n      });\r\n\r\n      return (\r\n         <ul className=\"comics__grid\">\r\n            <TransitionGroup component={null}>\r\n               {items}\r\n            </TransitionGroup>\r\n\r\n         </ul>\r\n      )\r\n   }\r\n\r\n   const items = renderItems(comicsList);\r\n\r\n   const spinner = loading ? <Spinner /> : null;\r\n   const errorMassage = error ? <ErrorMassage /> : null;\r\n\r\n   return (\r\n      <div className=\"comics__list\">\r\n         {spinner}\r\n         {errorMassage}\r\n         {items}\r\n         <button className=\"button button__main button__long\"\r\n            style={{ 'display': comicsEnded ? 'none' : 'block' }}\r\n            disabled={moreComicsLoading}\r\n            onClick={() => onRequest(offset)}\r\n         >\r\n            <div className=\"inner\">LOAD MORE</div>\r\n         </button>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ComicsList;","import './appBunner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBunner = () => {\r\n   return (\r\n      <div className=\"app__bunner\">\r\n         <img src={avengers} alt=\"Avengers\" />\r\n         <div className=\"app__bunner-text\">\r\n            New comics every week!<br/>\r\n               Stay tuned!\r\n         </div>\r\n         <img src={avengersLogo} alt=\"Avengers_logo\" />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default AppBunner;","import ComicsList from '../comicsList/ComicsList';\r\nimport AppBunner from '../appBunner/AppBunner';\r\nimport { Outlet, useOutlet } from 'react-router-dom';\r\n\r\nconst ComicsPage = () => {\r\n   const outlet = useOutlet();\r\n\r\n   return (\r\n      <div className='fade-page'>\r\n         <AppBunner />\r\n         {outlet ? <Outlet/> : <ComicsList />}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ComicsPage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n   const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n   const _apiKey = 'apikey=6fd4c27ab8f0c4a825d883b3b3700407';\r\n   const _baseOffset = 210;\r\n\r\n   const { loading, error, clearError, request} = useHttp();\r\n   \r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n      const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\r\n      return res.data.results.map(_transformCharacter);\r\n   }\r\n\r\n   const getCharacter = async (id) => {\r\n      const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\r\n      return _transformCharacter(res.data.results[0]);\r\n   }\r\n\r\n   const getAllComics = async (offset = 0) => {\r\n      const res = await request(`${_apiBase}comics?orderBy=issueNumber&offset=${offset}&limit=8&${_apiKey}`);\r\n\r\n      return res.data.results.map(_transformComics);\r\n   }\r\n\r\n   const getComic = async (id) => {\r\n      const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\r\n      return _transformComic(res.data.results[0]);\r\n   }\r\n\r\n   const _transformComics = (comics) => {\r\n      return ({\r\n         id: comics.id,\r\n         title: comics.title,\r\n         thumbnail: `${comics.thumbnail.path}.${comics.thumbnail.extension}`,\r\n         price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'NOT AVAILABLE'\r\n      })\r\n   }\r\n\r\n   const _transformCharacter = (char) => {\r\n      const charDescr = char.description ? (char.description.length > 210 ? `${char.description.substring(0, 210)}...` :\r\n         char.description) : \"Unfortunately, there is no description about this character...\";\r\n\r\n      return ({\r\n         id: char.id,\r\n         name: char.name,\r\n         description: charDescr,\r\n         thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n         homepage: char.urls[0].url,\r\n         wiki: char.urls[1].url,\r\n         comics: char.comics.items\r\n      })\r\n   }\r\n\r\n   const _transformComic = (comic) => {\r\n      return ({\r\n         id: comic.id,\r\n         title: comic.title,\r\n         thumbnail: `${comic.thumbnail.path}.${comic.thumbnail.extension}`,\r\n         price: comic.prices[0].price ? `${comic.prices[0].price}$` : 'NOT AVAILABLE',\r\n         description: comic.description || \"There is no description\",\r\n         pageCount: comic.pageCount ? `${comic.pageCount} pages` : 'No information about the number of pages',\r\n         language: comic.textObjects[0]  ?  comic.textObjects[0].language : 'en-us'\r\n      })\r\n   }\r\n\r\n   return {loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComic}\r\n}\r\n\r\nexport default useMarvelService;","import { useCallback, useState } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n\r\n   const [loading, setLoading] = useState(false);\r\n   const [error, setError] = useState(null);\r\n\r\n   const request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n\r\n      setLoading(true);\r\n\r\n      try {\r\n         const response = await fetch(url, { method, headers, body });\r\n\r\n         if (!response.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n         }\r\n\r\n         const data = await response.json();\r\n         setLoading(false);\r\n\r\n         return data;\r\n      } catch (e) {\r\n         setLoading(false);\r\n         setError(true);\r\n\r\n         throw e;\r\n      }\r\n\r\n      \r\n   }, []);\r\n\r\n   const clearError = useCallback(() => setError(null), []);\r\n\r\n   return {loading, error, request, clearError}\r\n}"],"names":["_jsx","src","img","alt","style","margin","background","display","width","height","objectFit","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","offset","setOffset","_useState5","_useState6","moreComicsLoading","setMoreComicsLoading","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","addComic","index","concat","_toConsumableArray","setTimeout","items","arr","map","item","i","thumbnail","title","price","id","imgStyle","CSSTransition","timeout","classNames","children","className","_jsxs","Link","to","TransitionGroup","component","renderItems","spinner","Spinner","errorMassage","ErrorMassage","disabled","onClick","avengers","avengersLogo","outlet","useOutlet","AppBunner","Outlet","ComicsList","_apiBase","_apiKey","_useHttp","setLoading","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","undefined","fetch","sent","ok","Error","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","getAllCharacters","res","results","_transformCharacter","getCharacter","_ref2","_callee2","_context2","_ref3","_callee3","_args3","_context3","_transformComics","getComic","_ref4","_callee4","_context4","_transformComic","_x2","comics","path","extension","prices","char","charDescr","description","substring","name","homepage","urls","wiki","comic","pageCount","language","textObjects"],"sourceRoot":""}